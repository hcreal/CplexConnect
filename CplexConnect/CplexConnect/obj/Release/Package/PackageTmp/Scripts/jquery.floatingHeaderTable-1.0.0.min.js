(function (e) { function t(e, t) { } function n(t) { $container = t.parent(); var n = t.clone().hide().appendTo($container).attr("data-helper-table", "true").width(t.width()).css("position", "fixed").css("left", t.offset().left).css("margin-left", "0px").css("top", $container.offset().top).css("margin-top", "0px"); n.find("*").removeAttr("id"); n.find("tbody").remove(); n.find("tr").each(function (n, r) { var i = e(r); var s = t.find("thead>tr:nth-child(" + (n + 1) + ")"); i.children("th, td").each(function (t, n) { var r = e(n); var i = s.children("th:nth-child(" + (t + 1) + "), td:nth-child(" + (t + 1) + ")"); r.width(i.width()) }) }); return n } var r = { init: function (t) { var r = e.extend({}, e.fn.floatingHeaderTable.defaults, t); return this.each(function () { var t = e(this); var r = t.parent().scroll(function () { var e = t.data("helper"); if (e) { var n = t.offset().top >= r.offset().top; var i = t.offset().top + t.height() <= r.offset().top; if (n || i) e.hide(); else e.show() } }).trigger("scroll"); if (t.data("helper")) t.data("helper").remove(); t.data("helper", n(t)) }) }, refresh: function () { return this.each(function () { var t = e(this); if (t.data("helper")) { t.data("helper").remove(); t.data("helper", n(t)) } }) } }; e.fn.floatingHeaderTable = function (t) { if (r[t]) { return r[t].apply(this, Array.prototype.slice.call(arguments, 1)) } else if (typeof t === "object" || !t) { return r.init.apply(this, arguments) } else { e.error("Method " + t + " does not exist on jQuery.floatingHeaderTable") } }; e.fn.floatingHeaderTable.defaults = {} })(jQuery)